<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.tfedu.zhl.sso.back.func.dao.SProductBackFunclistMapper">
  <resultMap id="BaseResultMap" type="net.tfedu.zhl.sso.back.func.entity.SProductBackFunclist">
    <!--
      WARNING - @mbggenerated
    -->
    <constructor>
      <idArg column="Id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="Name" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="FuncDesc" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="Path" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="Area" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="scope" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="IsBase" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="IsFree" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="IsEnabled" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="orderNum" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="Flag" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="pid" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="iconPath" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="product_code" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  
  <!-- 查询角色对应的(一級)功能 -->
  <select id="getFuncListForRole" resultMap="BaseResultMap">
  	SELECT f.*  FROM `s_product_back_roleconfig` t
	LEFT JOIN s_product_back_funclist f on f.id = t.funcid 
	where t.flag = false and t.roleid = #{roleId} and f.product_code = #{productCode} 
	and  pid = 0  
  </select>
  
  
  <!-- 获取指定功能的子功能 -->
  <select id="getFuncListByParent" resultMap="BaseResultMap">
  	select  * from s_product_back_funclist  where pid in 
  	<foreach close=")" collection="parentIds" item="id" open="(" separator=",">
  		id
  	</foreach>
  	order by pid 
  </select>
  
  
  <!-- 获取指定功能的子功能 -->
  <select id="getFuncListByTheParent" resultMap="BaseResultMap">
  	select  * from s_product_back_funclist  where pid = #{parentId} order by id
  </select>
  
  
  
  <resultMap type="net.tfedu.zhl.sso.back.role.bean.SProductBackFuncInfoPermissionView" id="funcPermissionViewMap">
  	<id property="id" column="id"/>
  	<result property="name" column="name"/>
  	<result property="path" column="path"/>
  	<result property="permission" column="permission"/>
  </resultMap>
  
  
  
  <!-- 查询角色在指定产品的功能权限 --> 
  <select id="getRolePremissionAboutProductTopFunc" resultMap="funcPermissionViewMap">
	select  id,name,path,IF(permission is null,FALSE,TRUE  ) as permission from (
	select  f.id,f.name,f.pid,f.path,
	(select t.id from s_product_back_roleconfig t where t.roleid = #{roleId} and t.flag= false  and t.FuncId = f.Id ) as permission  
	  from s_product_back_funclist f 
	  where  f.product_code = #{productCode} and f.flag = false and f.Pid = 0 
	ORDER BY f.id
	)temp
  </select>
  
  
  <!-- 查询角色在指定功能的子功能下的权限 -->
  <select id="getRolePremissionAboutProductChildrenFunc"  resultMap="funcPermissionViewMap">
	select  id,name,path,IF(permission is null,FALSE,TRUE  ) as permission from (
	select  f.id,f.name,f.pid,f.path,
	(select t.id from s_product_back_roleconfig t where t.roleid = #{roleId} and t.flag= false and t.FuncId = f.Id ) as permission  
	  from s_product_back_funclist f 
	where  f.flag = false and f.Pid = #{parentId}
	ORDER BY f.id
	)temp
  </select>
  
  
  <!--  获取角色在指定功能的所有功能点操作的权限信息 -->
  <select id="getRolePermissionAboutFuncDetail" resultMap="funcPermissionViewMap">
	SELECT  id,name,path,IF(permission is null,false,true)permission from (
	SELECT id,name,path
	,(select id from s_product_back_roleconfig_detail d where d.funcDetailId = t.id and d.flag = false and d.RoleId = #{roleId} )permission
	FROM s_product_back_funclist_detail t 
	where flag = false and funcId =  #{funcId}
	)temp
  </select>
  
  
  
</mapper>