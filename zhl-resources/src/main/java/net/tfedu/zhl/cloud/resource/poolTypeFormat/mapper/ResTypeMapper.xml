<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.tfedu.zhl.cloud.resource.poolTypeFormat.dao.ResTypeMapper" >
  <resultMap id="BaseResultMap" type="net.tfedu.zhl.cloud.resource.poolTypeFormat.entity.ResType" >
    <!--
      WARNING - @mbggenerated
    -->
    <constructor >
      <idArg column="ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="MType" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="code" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="description" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="flag" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="PId" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="Level" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="TypeFlag" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="RoleId" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="SchoolId" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="SubjectId" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="DisplayIndex" jdbcType="TINYINT" javaType="java.lang.Byte" />
    </constructor>
  </resultMap>
  
  <!-- 根据资源库id，得到父类型的所有子类型及其自身 -->
  <resultMap id="MTypeEndMap"  type="net.tfedu.zhl.cloud.resource.poolTypeFormat.entity.ResPoolType">
       <id column="id" property="id" />
       <result column="poolId" property="poolid" />
       <!-- 一对多关系，一个资源库下，对应多个资源类型 -->
       <collection property="types" ofType="net.tfedu.zhl.cloud.resource.poolTypeFormat.entity.ResType">
           <id column="type_id" property="id" />
           <result column="type_pid" property="pid" />
       </collection>
  </resultMap>
  <select id="getTypesByPMTypeAndPool"  parameterType="HashMap"  resultMap="MTypeEndMap">
      SELECT * from (SELECT b.id type_id,b.pid type_pid,a.poolId poolId,a.id from z_res_pooltype a LEFT JOIN x_resourcetype b on 
      a.resTypeId = b.ID where a.flag=0 and b.flag=0 UNION SELECT a.id type_id,a.pid type_pid,b.poolId poolId,b.id from  
      x_resourcetype a LEFT JOIN z_res_pooltype b on a.Pid = b.resTypeId where a.flag=0 and b.flag=0) temp 
     
     <if test="poolId != 0 and MType == 0">
         where poolId = #{poolId}
     </if>
     <if test="MType != 0">
         where type_id = #{MType} or type_pid = #{MType}
     </if>
  </select>
  
  
  <!-- 根据当前资源库id和父结点的tfcode，查询所有的资源id -->
  <resultMap id="ResourceIdsMap"  type="Long">
       <result column="sys_id" property="id" />
  </resultMap>
  <select id="getAllResourceIdsByPtfcode"  parameterType="HashMap"  resultMap="ResourceIdsMap">
      select a.Id sys_id from z_resource a 
      left join z_resnav c on a.ResCode=c.ResCode 
      left join j_syscourse d on c.StructCode=d.tfcode  
      where a.flag=0 and c.flag=0 and d.flag=0 and a.fromFlag in (#{fromFlag}) and c.StructCode like  CONCAT(#{pTfcode},'%')
  </select>

  
  <!-- 当资源库选择  “全部” 或  “教学素材” 时，显示所有一级类型   -->
  <resultMap id="FirstTypeResultMap"  type="net.tfedu.zhl.cloud.resource.poolTypeFormat.entity.ResType">
       <id column="id" property="id" />
	   <result column="mtype" property="mtype" />
  </resultMap>
  <select id="getFirstLevelType"  resultMap="FirstTypeResultMap">
    select case when b.PId=0 then b.MType ELSE pb.MType END mtype,case when b.PId=0 then b.id ELSE pb.id END id
    from z_resource a 
    left join x_resourcetype b on a.MType = b.id 
    left join x_resourcetype pb on pb.Id=b.pid 
    where a.flag = 0 and b.flag = 0

     <if test="resourceIds == null">
         and a.id in ('')
     </if>
     <if test="resourceIds != null ">
         and a.id in
                <foreach item="item" index="index" collection="resourceIds" 
                         open="(" separator="," close=")">
                         #{item}
                </foreach>
         and a.mtype in
                <foreach item="item" index="index" collection="typeIds" 
                         open="(" separator="," close=")">
                         #{item}
                </foreach> 
         group by MType
     </if>
  </select>
  
  <!-- 当资源库选择  “动画焦教具”、“名师微课”、“教学案例” 时，显示所有二级类型。
              当资源库为“理化生实验”时，只显示“全部”。
     -->
  <resultMap id="SecondTypeResultMap"  type="net.tfedu.zhl.cloud.resource.poolTypeFormat.entity.ResType">
       <id column="id" property="id" />
	   <result column="mtype" property="mtype" />
  </resultMap>
  <select id="getSecondLevelType"  resultMap="SecondTypeResultMap">
     select b.mtype,b.id from z_resource a 
     left join x_resourcetype b on a.MType = b.id 
     where a.flag = 0 and b.flag = 0 and b.level = 2 
     <if test="resourceIds == null">
         and a.id in ('')
     </if>
     <if test="resourceIds != null ">
         and a.id in
                <foreach item="item" index="index" collection="resourceIds" 
                         open="(" separator="," close=")">
                         #{item}
                </foreach>
         and a.mtype in
                <foreach item="item" index="index" collection="typeIds" 
                         open="(" separator="," close=")">
                         #{item}
                </foreach> 
         group by MType
     </if>  
  </select>
</mapper>